
-- 
-- Definition of  Robot
-- 
--      Wed Apr 15 14:35:39 2020
--      
--      LeonardoSpectrum Level 3, 2015a.6
-- 

library IEEE;
use IEEE.STD_LOGIC_1164.all;

entity Robot is
   port (
      reset : IN std_logic ;
      clk : IN std_logic ;
      athome : IN std_logic ;
      findfood : IN std_logic ;
      lostfood : IN std_logic ;
      closetofood : IN std_logic ;
      success : IN std_logic ;
      aboverestth : IN std_logic ;
      abovesearchth : IN std_logic ;
      scantimeup : IN std_logic ;
      rest : OUT std_logic ;
      search : OUT std_logic ;
      food : OUT std_logic) ;
end Robot ;

architecture automate_robot of Robot is
   component select_9_9
      port (
         a : IN std_logic_vector (8 DOWNTO 0) ;
         b : IN std_logic_vector (8 DOWNTO 0) ;
         d : OUT std_logic) ;
   end component ;
   procedure DFFPC (
      constant data   : in std_logic;
      constant preset : in std_logic;
      constant clear  : in std_logic;
      signal clk      : in std_logic;
      signal q        : out std_logic)
   is begin
       if (preset = '1') then
           q <= '1' ;
       elsif (clear = '1') then
           q <= '0' ;
       elsif (clk'event and clk'last_value = '0' and clk = '1') then
           q <= data and data ;    -- takes care of q<='X' if data='Z'
       end if ;
       if ((clear/='1' or preset/='1') and clk/='0' and clk/='1') then
           q <= 'X' ;
       end if ;
   end DFFPC ;
   signal state_8, state_7, state_6, state_5, state_4, state_3, state_2, 
      state_1, state_0, nextstate_8, nextstate_7, nextstate_6, nextstate_5, 
      nextstate_4, nextstate_3, nextstate_2, nextstate_1, nextstate_0, GND0, 
      PWR, nx48, nx50, nx102, nx104, nx108, nx168, nx176, nx178, nx305, 
      nx307, nx309, NOT_abovesearchth, nx321, NOT_lostfood, nx325, nx344, 
      nx367, nx373, nx375, nx377, nx391, nx405, nx407, nx409, 
      NOT_aboverestth, NOT_nx344, NOT_nx375, NOT_athome, NOT_nx407, 
      NOT_success, nx610, nx616, nx622, nx625, nx631, nx637, nx643, nx649, 
      nx655, nx658: std_logic ;

begin
   PWR <= '1' ;
   GND0 <= '0' ;
   modgen_select_0 : select_9_9 port map ( a(8)=>state_0, a(7)=>state_1, 
      a(6)=>state_2, a(5)=>state_3, a(4)=>state_4, a(3)=>state_5, a(2)=>
      state_8, a(1)=>state_6, a(0)=>state_7, b(8)=>GND0, b(7)=>GND0, b(6)=>
      GND0, b(5)=>GND0, b(4)=>GND0, b(3)=>nx168, b(2)=>NOT_success, b(1)=>
      GND0, b(0)=>GND0, d=>nextstate_8);
   modgen_select_1 : select_9_9 port map ( a(8)=>state_0, a(7)=>state_1, 
      a(6)=>state_2, a(5)=>state_3, a(4)=>state_4, a(3)=>state_5, a(2)=>
      state_8, a(1)=>state_6, a(0)=>state_7, b(8)=>GND0, b(7)=>GND0, b(6)=>
      GND0, b(5)=>GND0, b(4)=>GND0, b(3)=>GND0, b(2)=>GND0, b(1)=>athome, 
      b(0)=>NOT_success, d=>nextstate_7);
   modgen_select_2 : select_9_9 port map ( a(8)=>state_0, a(7)=>state_1, 
      a(6)=>state_2, a(5)=>state_3, a(4)=>state_4, a(3)=>state_5, a(2)=>
      state_8, a(1)=>state_6, a(0)=>state_7, b(8)=>GND0, b(7)=>GND0, b(6)=>
      GND0, b(5)=>GND0, b(4)=>GND0, b(3)=>GND0, b(2)=>success, b(1)=>
      NOT_athome, b(0)=>GND0, d=>nextstate_6);
   modgen_select_3 : select_9_9 port map ( a(8)=>state_0, a(7)=>state_1, 
      a(6)=>state_2, a(5)=>state_3, a(4)=>state_4, a(3)=>state_5, a(2)=>
      state_8, a(1)=>state_6, a(0)=>state_7, b(8)=>GND0, b(7)=>GND0, b(6)=>
      nx48, b(5)=>nx102, b(4)=>GND0, b(3)=>NOT_nx407, b(2)=>GND0, b(1)=>GND0, 
      b(0)=>GND0, d=>nextstate_5);
   modgen_select_4 : select_9_9 port map ( a(8)=>state_0, a(7)=>state_1, 
      a(6)=>state_2, a(5)=>state_3, a(4)=>state_4, a(3)=>state_5, a(2)=>
      state_8, a(1)=>state_6, a(0)=>state_7, b(8)=>GND0, b(7)=>GND0, b(6)=>
      nx50, b(5)=>nx104, b(4)=>NOT_athome, b(3)=>nx176, b(2)=>GND0, b(1)=>
      GND0, b(0)=>GND0, d=>nextstate_4);
   modgen_select_5 : select_9_9 port map ( a(8)=>state_0, a(7)=>state_1, 
      a(6)=>state_2, a(5)=>state_3, a(4)=>state_4, a(3)=>state_5, a(2)=>
      state_8, a(1)=>state_6, a(0)=>state_7, b(8)=>GND0, b(7)=>GND0, b(6)=>
      GND0, b(5)=>NOT_nx375, b(4)=>GND0, b(3)=>nx178, b(2)=>GND0, b(1)=>GND0, 
      b(0)=>GND0, d=>nextstate_3);
   modgen_select_6 : select_9_9 port map ( a(8)=>state_0, a(7)=>state_1, 
      a(6)=>state_2, a(5)=>state_3, a(4)=>state_4, a(3)=>state_5, a(2)=>
      state_8, a(1)=>state_6, a(0)=>state_7, b(8)=>GND0, b(7)=>aboverestth, 
      b(6)=>NOT_nx344, b(5)=>nx108, b(4)=>GND0, b(3)=>GND0, b(2)=>GND0, b(1)
      =>GND0, b(0)=>GND0, d=>nextstate_2);
   modgen_select_7 : select_9_9 port map ( a(8)=>state_0, a(7)=>state_1, 
      a(6)=>state_2, a(5)=>state_3, a(4)=>state_4, a(3)=>state_5, a(2)=>
      state_8, a(1)=>state_6, a(0)=>state_7, b(8)=>PWR, b(7)=>
      NOT_aboverestth, b(6)=>GND0, b(5)=>GND0, b(4)=>athome, b(3)=>GND0, 
      b(2)=>GND0, b(1)=>GND0, b(0)=>success, d=>nextstate_1);
   modgen_select_8 : select_9_9 port map ( a(8)=>state_0, a(7)=>state_1, 
      a(6)=>state_2, a(5)=>state_3, a(4)=>state_4, a(3)=>state_5, a(2)=>
      state_8, a(1)=>state_6, a(0)=>state_7, b(8)=>GND0, b(7)=>GND0, b(6)=>
      GND0, b(5)=>GND0, b(4)=>GND0, b(3)=>GND0, b(2)=>GND0, b(1)=>GND0, b(0)
      =>GND0, d=>nextstate_0);
   DFFPC (nextstate_8,GND0,reset,clk,state_8) ;
   DFFPC (nextstate_7,GND0,reset,clk,state_7) ;
   DFFPC (nextstate_6,GND0,reset,clk,state_6) ;
   DFFPC (nextstate_5,GND0,reset,clk,state_5) ;
   DFFPC (nextstate_4,GND0,reset,clk,state_4) ;
   DFFPC (nextstate_3,GND0,reset,clk,state_3) ;
   DFFPC (nextstate_2,GND0,reset,clk,state_2) ;
   DFFPC (nextstate_1,GND0,reset,clk,state_1) ;
   DFFPC (nextstate_0,reset,GND0,clk,state_0) ;
   nx305 <= state_7 AND success ;
   nx307 <= nx305 OR state_0 ;
   nx309 <= state_4 AND athome ;
   rest <= nx307 OR nx309 ;
   search <= state_1 AND aboverestth ;
   NOT_abovesearchth <= NOT abovesearchth ;
   nx321 <= state_5 AND NOT_abovesearchth ;
   NOT_lostfood <= NOT lostfood ;
   nx325 <= nx321 AND NOT_lostfood ;
   food <= nx325 AND closetofood ;
   nx344 <= abovesearchth OR findfood ;
   nx367 <= findfood OR scantimeup ;
   nx373 <= abovesearchth OR findfood ;
   nx375 <= nx373 OR scantimeup ;
   nx377 <= abovesearchth OR findfood ;
   nx391 <= abovesearchth OR lostfood ;
   nx405 <= abovesearchth OR lostfood ;
   nx407 <= nx405 OR closetofood ;
   nx409 <= lostfood OR closetofood ;
   NOT_aboverestth <= NOT aboverestth ;
   NOT_nx344 <= NOT nx344 ;
   NOT_nx375 <= NOT nx375 ;
   NOT_athome <= NOT athome ;
   NOT_nx407 <= NOT nx407 ;
   NOT_success <= NOT success ;
   nx48 <= GND0 when abovesearchth = '1' else nx610 ;
   nx610 <= PWR when findfood = '1' else GND0 ;
   nx50 <= PWR when abovesearchth = '1' else nx616 ;
   nx616 <= GND0 when findfood = '1' else GND0 ;
   nx102 <= GND0 when abovesearchth = '1' else nx622 ;
   nx622 <= PWR when findfood = '1' else nx625 ;
   nx625 <= GND0 when scantimeup = '1' else GND0 ;
   nx104 <= PWR when abovesearchth = '1' else nx631 ;
   nx631 <= GND0 when nx367 = '1' else GND0 ;
   nx108 <= GND0 when nx377 = '1' else nx637 ;
   nx637 <= PWR when scantimeup = '1' else GND0 ;
   nx168 <= GND0 when nx391 = '1' else nx643 ;
   nx643 <= PWR when closetofood = '1' else GND0 ;
   nx176 <= PWR when abovesearchth = '1' else nx649 ;
   nx649 <= GND0 when nx409 = '1' else GND0 ;
   nx178 <= GND0 when abovesearchth = '1' else nx655 ;
   nx655 <= PWR when lostfood = '1' else nx658 ;
   nx658 <= GND0 when closetofood = '1' else GND0 ;
end automate_robot ;

